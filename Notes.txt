Chapter 1
#include <iostream> - Preprocessor Directive
using namespace std; - Standard Namespace

int main() - main function
{

}

cout - console output
endl - end line (newline)
<< - Stream insertion operator (sends new string to console)

Programming Errors
Syntax Error - 
Runtime Error - 
Logic Errors - 

Chapter 2
cin - object to read input from the keyboard

Identifiers - the names that identify elements such as variables
and functions in a program.

Identifier - a sequence of characters that consists of letters, digits, 
and underscores (cannot start with a digit)
* Cannot ba a reserved word (cin, cout).
* Must start with a letter or underscore
    ^
    |
8/20/25 ----------------------------------

Variables are used to represent values that may be changed in the program.
Examples:

int x = 1; -- Integer Variable
double radius = 1.8; -- Double Variable
char a; -- Character Variable

        Named Constants
A named constant is an identifier that represents a permanent value.
* Constant names should be in uppercase.
* You don't have to repeatedly type the same value.

Examples:
const datatype CONSTANTNAME = VALUE;
const double PI = 3.14159;
const int SIZE = 3;

        sizeof Function
You can use the sizeof function to find the size of a type.

        Integer Division
5 / 2 yields 2
5.0 / 2 yields 2.5

        Augmented Assignment Operators
+= -> i += 8 -> i = i + 8
-+ -> i -= 8 -> i = i - 8
*= -> i *= 8 -> i = i * 8
/= -> i /= 8 -> i = i / 8
%= -> i %= 8 -> i = i & 8

        Increment and Decrement Operators
++var -> Preincrement - increases by 1 and evaluated to the new value in var after the increment
var++ -> Postincrement - evaluates to the original value in var and increments by 1.
--var -> Predecrement - decrements var by 1 and evaluates to the new value in var after the decrement.
var-- -> Postdecrement - Evaluates to the original value in var and decrements var by 1.
    Examples:
int i = 10;                 int newNum = 10 * i;
int newNum = 10 * i++; ---> i = i + 1;

        Type Casting
Implicit Casting - double d = 3; (type widening)
Explicit Casting - int i = static_cast<int>(3.0); (type narrowing)
int i = (int)3.9; (fraction part is truncated)
    ^
    |
8/22/25 ----------------------------------

Chapter 3
        Relational Operators
< - less than
<= - less than or equal to
> - greater than
>= - greater than or equal to
== - equal to
!= - not equal to

        Logical Operators
! - not - logical negation
&& - and - logical conjugation
|| - or - logical disjunction

        Switch Statements
A switch statement executes statements based on the value of a variable or an expression.

switch (status)
{
 case 0: compute taxes for single fliers;
 break;

 case 1: compute taxes for married file jointly;
 break;

 case 2: compute taxes for married file seperately;
 break;

 case 3; compute taxes for head of household;
 break;

 default: cout << "Errors: invalid status" << endl;
}

        Conditional Operator
if (x > 0)
  y = 1
else
  y = -1;

is equivalent to

y = (x > 0) ? 1 : -1;
(booleanExpression) ? expression1 : expression2

        Generating Random Numbers
rand() - can be used to obtain a random number

Include <cstdlib> for rand() and srand() functions.
Use srand(time(0)); before rand function. (seed)

Include <ctime> library for time function.

    ^
    |
8/25/25 ----------------------------------